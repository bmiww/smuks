
(defpackage #:osiwrap
  (:use #:cl #:cffi #:cffi-define)
  (:export socket-pair))
(in-package :osiwrap)

(defcenum! address-family
    ("<sys/socket.h>")
  (AF_UNSPEC :unspec)
  (AF_UNIX :unix)
  (AF_LOCAL :local)
  (AF_INET :inet)
  (AF_AX25 :ax25)
  (AF_IPX :ipx)
  (AF_APPLETALK :appletalk)
  (AF_NETROM :netrom)
  (AF_BRIDGE :bridge)
  (AF_ATMPVC :atmpvc)
  (AF_X25 :x25)
  (AF_INET6 :inet6)
  (AF_ROSE :rose)
  (AF_NETBEUI :netbeui)
  (AF_SECURITY :security)
  (AF_KEY :key)
  (AF_NETLINK :netlink)
  (AF_ROUTE :route)
  (AF_PACKET :packet)
  (AF_ASH :ash)
  (AF_ECONET :econet)
  (AF_ATMSVC :atmsvc)
  (AF_RDS :rds)
  (AF_SNA :sna)
  (AF_IRDA :irda)
  (AF_PPPOX :pppox)
  (AF_WANPIPE :wanpipe)
  (AF_LLC :llc)
  (AF_IB :ib)
  (AF_MPLS :mpls)
  (AF_CAN :can)
  (AF_TIPC :tipc)
  (AF_BLUETOOTH :bluetooth)
  (AF_IUCV :iucv)
  (AF_RXRPC :rxrpc)
  (AF_ISDN :isdn)
  (AF_PHONET :phonet)
  (AF_IEEE802154 :ieee802154)
  (AF_CAIF :caif)
  (AF_ALG :alg)
  (AF_NFC :nfc)
  (AF_VSOCK :vsock)
  (AF_KCM :kcm)
  (AF_QIPCRTR :qipcrtr)
  (AF_SMC :smc)
  (AF_XDP :xdp)
  (AF_MCTP :mctp)
  (AF_MAX :max))

(defcenum socket-type
  (:dgram 1)
  (:stream 2)
  (:raw 3)
  (:rdm 4)
  (:seqpacket 5)
  (:dccp 6)
  (:packet 10))

(defcfun ("socketpair" %socketpair) :int
  (domain   address-family)
  (type     socket-type)
  (protocol :int)
  (filedes  :pointer))

(defun socketpair (domain type &optional (protocol 0))
  "Create a pair of connected sockets, returns two values with the new FDs."
  (with-foreign-object (filedes :int 2)
    (%socketpair domain type protocol filedes)
    (values (mem-aref filedes :int 0)
            (mem-aref filedes :int 1))))
